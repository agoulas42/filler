/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_handle_piece.c                                  :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: agoulas <marvin@42.fr>                     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/09/28 17:21:53 by agoulas           #+#    #+#             */
/*   Updated: 2018/09/28 17:23:32 by agoulas          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../includes/ft_filler.h"

int		ft_position_valide(t_game *p, int i, int j, char c)
{
	if ( i > 0 && p->ring[i - 1][j] == c)
		return (1);
	else if (i < p->heigth && p->ring[i + 1][j] == c)
		return (1);
	else if (j > 0 && p->ring[i][j - 1] == c)
		return (1);
	else if (j < p->width && p->ring[i][j + 1] == c)
		return (1);
	return (0);
}

int		ft_test_piece(t_game *p, int x, int y)
{
	int i;
	int j;

	i = 0;
	while (i < p->elem->heigth)
	{
		j = 0;
		while (j < p->elem->width)
		{
			if (p->elem->tab[i][j] == '*' && p->ring[x + i][ y + j] == '.')
			{
				if (ft_position_valide(p, x + i, y + j, 'O') == 1)
				{
					ft_printf("%d %d\n", x, y);
					char str[10];
					ft_bzero(str,10);
					ft_strcat(str, ft_itoa(x));
					ft_strcat(str," ");
					ft_strcat(str, ft_itoa(y));
					write(p->test,str, ft_strlen(str));
					write(p->test, "\n", 1);
					return (1);
				}
			}
			j++;
		}
		i++;
	}
	return (0);
}

int			ft_piece_valide(t_game *p)
{
	int i;
	int j;


	i = 0;
	write(p->test,"test piece\n", 11);
	while (i < p->heigth)
	{
		j = 0;
		while (j < p->width)
		{
			if (ft_test_piece(p, i, j) == 1)
				return (1);
			j++;
		}
		i++;
	}
	write(p->test,"error piece\n", 12);
	return (0);
}
